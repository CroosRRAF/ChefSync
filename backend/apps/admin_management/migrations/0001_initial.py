# Generated by Django 5.2.5 on 2025-09-20 14:57

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('view', 'View'), ('export', 'Export'), ('import', 'Import'), ('approve', 'Approve'), ('reject', 'Reject'), ('suspend', 'Suspend'), ('activate', 'Activate'), ('login', 'Login'), ('logout', 'Logout')], max_length=20)),
                ('resource_type', models.CharField(choices=[('user', 'User'), ('order', 'Order'), ('food', 'Food'), ('payment', 'Payment'), ('system', 'System'), ('settings', 'Settings'), ('report', 'Report')], max_length=20)),
                ('resource_id', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AdminBackupLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backup_type', models.CharField(choices=[('database', 'Database'), ('files', 'Files'), ('full', 'Full System'), ('incremental', 'Incremental')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='AdminDashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('widget_type', models.CharField(choices=[('stats_card', 'Statistics Card'), ('chart', 'Chart'), ('table', 'Table'), ('list', 'List'), ('gauge', 'Gauge'), ('map', 'Map')], max_length=20)),
                ('chart_type', models.CharField(blank=True, choices=[('line', 'Line Chart'), ('bar', 'Bar Chart'), ('pie', 'Pie Chart'), ('doughnut', 'Doughnut Chart'), ('area', 'Area Chart')], max_length=20, null=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('data_source', models.CharField(max_length=100)),
                ('position_x', models.IntegerField(default=0)),
                ('position_y', models.IntegerField(default=0)),
                ('width', models.IntegerField(default=4)),
                ('height', models.IntegerField(default=3)),
                ('is_active', models.BooleanField(default=True)),
                ('refresh_interval', models.IntegerField(default=300)),
                ('config', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['position_y', 'position_x'],
            },
        ),
        migrations.CreateModel(
            name='AdminNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('system_alert', 'System Alert'), ('user_activity', 'User Activity'), ('order_update', 'Order Update'), ('payment_issue', 'Payment Issue'), ('security_event', 'Security Event'), ('maintenance', 'Maintenance'), ('backup', 'Backup'), ('performance', 'Performance')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('is_read', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdminQuickAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('action_type', models.CharField(choices=[('create_user', 'Create User'), ('approve_chef', 'Approve Chef'), ('view_orders', 'View Orders'), ('export_data', 'Export Data'), ('system_backup', 'System Backup'), ('maintenance_mode', 'Maintenance Mode'), ('clear_cache', 'Clear Cache'), ('send_notification', 'Send Notification')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(default='bx-cog', max_length=50)),
                ('color', models.CharField(default='blue', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_confirmation', models.BooleanField(default=False)),
                ('confirmation_message', models.TextField(blank=True)),
                ('position', models.IntegerField(default=0)),
                ('config', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='AdminSystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('setting_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('boolean', 'Boolean'), ('float', 'Float'), ('json', 'JSON'), ('email', 'Email'), ('url', 'URL')], default='string', max_length=20)),
                ('category', models.CharField(choices=[('general', 'General'), ('security', 'Security'), ('performance', 'Performance'), ('notifications', 'Notifications'), ('backup', 'Backup'), ('maintenance', 'Maintenance'), ('api', 'API'), ('ui', 'User Interface')], default='general', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('is_encrypted', models.BooleanField(default=False)),
                ('default_value', models.TextField(blank=True)),
                ('validation_rules', models.JSONField(blank=True, default=dict)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['category', 'key'],
            },
        ),
        migrations.CreateModel(
            name='SystemHealthMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('cpu_usage', 'CPU Usage'), ('memory_usage', 'Memory Usage'), ('disk_usage', 'Disk Usage'), ('database_connections', 'Database Connections'), ('response_time', 'Response Time'), ('error_rate', 'Error Rate'), ('active_users', 'Active Users'), ('api_calls', 'API Calls')], max_length=30)),
                ('value', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('unit', models.CharField(default='%', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
