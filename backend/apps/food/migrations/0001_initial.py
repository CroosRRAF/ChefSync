# Generated by Django 5.2.5 on 2025-09-27 09:22

import apps.food.cloudinary_fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cuisine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', apps.food.cloudinary_fields.CloudinaryImageField(blank=True, max_length=500, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'cuisines',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('offer_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('discount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('valid_until', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Offer',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('image', apps.food.cloudinary_fields.CloudinaryImageField(blank=True, max_length=500, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('cuisine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='food.cuisine')),
            ],
            options={
                'db_table': 'food_categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('food_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', apps.food.cloudinary_fields.CloudinaryImageField(blank=True, help_text='Primary food image - uploaded to Cloudinary', max_length=500, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('is_available', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('preparation_time', models.PositiveIntegerField(blank=True, help_text='Preparation time in minutes', null=True)),
                ('calories_per_serving', models.PositiveIntegerField(blank=True, null=True)),
                ('ingredients', models.JSONField(blank=True, default=list)),
                ('allergens', models.JSONField(blank=True, default=list)),
                ('nutritional_info', models.JSONField(blank=True, default=dict)),
                ('is_vegetarian', models.BooleanField(default=False)),
                ('is_vegan', models.BooleanField(default=False)),
                ('is_gluten_free', models.BooleanField(default=False)),
                ('spice_level', models.CharField(blank=True, choices=[('mild', 'Mild'), ('medium', 'Medium'), ('hot', 'Hot'), ('very_hot', 'Very Hot')], max_length=20, null=True)),
                ('rating_average', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('total_orders', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.ForeignKey(blank=True, limit_choices_to={'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_foods', to=settings.AUTH_USER_MODEL)),
                ('chef', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='foods', to=settings.AUTH_USER_MODEL)),
                ('food_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='foods', to='food.foodcategory')),
            ],
            options={
                'db_table': 'Food',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FoodPrice',
            fields=[
                ('price_id', models.AutoField(primary_key=True, serialize=False)),
                ('size', models.CharField(choices=[('Small', 'Small'), ('Medium', 'Medium'), ('Large', 'Large')], max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('preparation_time', models.PositiveIntegerField(default=15, help_text='Preparation time in minutes for this size')),
                ('image_url', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='food_prices', to=settings.AUTH_USER_MODEL)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='food.food')),
            ],
            options={
                'db_table': 'FoodPrice',
                'ordering': ['food', 'size'],
            },
        ),
        migrations.CreateModel(
            name='FoodReview',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('taste_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('presentation_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('value_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('is_verified_purchase', models.BooleanField(default=True)),
                ('helpful_votes', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='food_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'FoodReview',
                'ordering': ['-created_at'],
            },
        ),
    ]
