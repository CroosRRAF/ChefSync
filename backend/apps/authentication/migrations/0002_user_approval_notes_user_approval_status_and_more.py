# Generated by Django 5.2.5 on 2025-09-20 16:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='user',
            name='approval_notes',
            field=models.TextField(blank=True, help_text='Admin notes for approval/rejection', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='approval_status',
            field=models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='approved', help_text='Approval status for cooks and delivery agents', max_length=20),
        ),
        migrations.AddField(
            model_name='user',
            name='approved_at',
            field=models.DateTimeField(blank=True, help_text='When the user was approved', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='approved_by',
            field=models.ForeignKey(blank=True, help_text='Admin who approved this user', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Document type name (e.g., 'Driving License', 'Food Safety Certificate')", max_length=100)),
                ('category', models.CharField(choices=[('cook', 'Cook Documents'), ('delivery_agent', 'Delivery Agent Documents')], help_text='Category this document belongs to', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description of what this document is for', null=True)),
                ('is_required', models.BooleanField(default=True, help_text='Whether this document is required for approval')),
                ('allowed_file_types', models.JSONField(default=list, help_text="List of allowed file extensions (e.g., ['pdf', 'jpg', 'png'])")),
                ('max_file_size_mb', models.IntegerField(default=5, help_text='Maximum file size in MB')),
                ('is_single_page_only', models.BooleanField(default=True, help_text='Whether this document should be single page only')),
                ('max_pages', models.IntegerField(default=2, help_text='Maximum number of pages allowed (for PDFs)')),
            ],
            options={
                'db_table': 'document_types',
                'unique_together': {('name', 'category')},
            },
        ),
        migrations.CreateModel(
            name='UserDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.URLField(help_text='Document file URL (Cloudinary or local)', max_length=500)),
                ('file_name', models.CharField(help_text='Original file name', max_length=255)),
                ('file_size', models.BigIntegerField(help_text='File size in bytes')),
                ('file_type', models.CharField(help_text='File MIME type', max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('needs_resubmission', 'Needs Resubmission')], default='pending', max_length=20)),
                ('admin_notes', models.TextField(blank=True, help_text='Admin review notes', null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_visible_to_admin', models.BooleanField(default=False, help_text='Whether admin can see this document')),
                ('cloudinary_public_id', models.CharField(blank=True, help_text='Cloudinary public ID for the file', max_length=255, null=True)),
                ('local_file_path', models.CharField(blank=True, help_text='Local file path for PDFs to avoid Cloudinary access issues', max_length=500, null=True)),
                ('converted_images', models.JSONField(blank=True, help_text='Metadata for converted images (for PDFs converted to images)', null=True)),
                ('is_pdf_converted', models.BooleanField(default=False, help_text='Whether this document was converted from PDF to images')),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.documenttype')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_documents', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_documents',
                'ordering': ['-uploaded_at'],
            },
        ),
    ]
