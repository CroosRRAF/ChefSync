# Generated by Django 4.2.7 on 2025-10-25 01:19

from django.db import migrations, models
from django.db import connection


def add_field_if_not_exists(apps, schema_editor):
    """Add updated_at field to bulkorderassignment if it doesn't exist"""
    with connection.cursor() as cursor:
        # Check if updated_at column exists
        cursor.execute("""
            SELECT COUNT(*) 
            FROM INFORMATION_SCHEMA.COLUMNS 
            WHERE TABLE_SCHEMA = DATABASE() 
            AND TABLE_NAME = 'BulkOrderAssignment' 
            AND COLUMN_NAME = 'updated_at'
        """)
        if cursor.fetchone()[0] == 0:
            # Column doesn't exist, add it
            cursor.execute("""
                ALTER TABLE BulkOrderAssignment 
                ADD COLUMN updated_at datetime(6) NULL
            """)


def reverse_add_field_if_not_exists(apps, schema_editor):
    """Remove updated_at field if it was added"""
    with connection.cursor() as cursor:
        cursor.execute("""
            SELECT COUNT(*) 
            FROM INFORMATION_SCHEMA.COLUMNS 
            WHERE TABLE_SCHEMA = DATABASE() 
            AND TABLE_NAME = 'BulkOrderAssignment' 
            AND COLUMN_NAME = 'updated_at'
        """)
        if cursor.fetchone()[0] > 0:
            cursor.execute("ALTER TABLE BulkOrderAssignment DROP COLUMN updated_at")


class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0013_merge_20251024_2342'),
    ]

    operations = [
        migrations.RunPython(add_field_if_not_exists, reverse_add_field_if_not_exists),
        migrations.AddField(
            model_name='deliveryreview',
            name='admin_response',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='deliveryreview',
            name='response_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='bulkorder',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('collaborating', 'Collaborating'), ('preparing', 'Preparing'), ('completed', 'Completed'), ('ready_for_delivery', 'Ready for Delivery'), ('cancelled', 'Cancelled')], default='pending', max_length=20),
        ),
    ]
