# Generated by Django 5.2.5 on 2025-09-20 14:57

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PlatformConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('config_type', models.CharField(choices=[('business', 'Business Rules'), ('operational', 'Operational Settings'), ('technical', 'Technical Configuration'), ('integration', 'Integration Settings'), ('customization', 'Customization Options')], max_length=20)),
                ('value', models.JSONField(help_text='Configuration value in JSON format')),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Platform Configuration',
                'verbose_name_plural': 'Platform Configurations',
                'ordering': ['config_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SystemAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('permission_change', 'Permission Change'), ('setting_change', 'Setting Change'), ('data_export', 'Data Export'), ('system_action', 'System Action')], max_length=20)),
                ('resource_type', models.CharField(help_text='Type of resource affected', max_length=50)),
                ('resource_id', models.CharField(blank=True, help_text='ID of resource affected', max_length=50)),
                ('details', models.JSONField(default=dict, help_text='Additional action details')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'System Audit Log',
                'verbose_name_plural': 'System Audit Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SystemMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('maintenance_type', models.CharField(choices=[('scheduled', 'Scheduled Maintenance'), ('emergency', 'Emergency Maintenance'), ('update', 'System Update'), ('backup', 'Backup Operation'), ('cleanup', 'Data Cleanup'), ('monitoring', 'System Monitoring')], max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('failed', 'Failed')], default='scheduled', max_length=20)),
                ('scheduled_start', models.DateTimeField()),
                ('scheduled_end', models.DateTimeField()),
                ('actual_start', models.DateTimeField(blank=True, null=True)),
                ('actual_end', models.DateTimeField(blank=True, null=True)),
                ('affected_services', models.JSONField(default=list, help_text='List of affected services')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'System Maintenance',
                'verbose_name_plural': 'System Maintenance',
                'ordering': ['-scheduled_start'],
            },
        ),
        migrations.CreateModel(
            name='SystemNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('maintenance', 'Maintenance'), ('update', 'Update'), ('announcement', 'Announcement')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('target_users', models.JSONField(default=list, help_text='List of user types to notify')),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'System Notification',
                'verbose_name_plural': 'System Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text='Setting identifier', max_length=100, unique=True)),
                ('value', models.TextField(help_text='Setting value (JSON format for complex data)')),
                ('setting_type', models.CharField(choices=[('general', 'General'), ('security', 'Security'), ('notification', 'Notification'), ('payment', 'Payment'), ('delivery', 'Delivery'), ('food', 'Food'), ('user', 'User'), ('analytics', 'Analytics')], default='general', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Setting description')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this setting is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'System Setting',
                'verbose_name_plural': 'System Settings',
                'ordering': ['setting_type', 'key'],
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('role_type', models.CharField(choices=[('admin', 'Administrator'), ('chef', 'Chef'), ('delivery', 'Delivery Partner'), ('customer', 'Customer'), ('support', 'Support Staff'), ('analyst', 'Business Analyst')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('permissions', models.JSONField(default=dict, help_text='JSON object of permissions')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Role',
                'verbose_name_plural': 'User Roles',
                'ordering': ['name'],
            },
        ),
    ]
